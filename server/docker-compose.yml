version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: reels-server
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - API_KEY=${API_KEY}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - CHANNEL_ID=${CHANNEL_ID}
      - MAX_CONCURRENT_DOWNLOADS=3
      - MAX_QUEUE_SIZE=50
      - MAX_MEMORY_PER_VIDEO=52428800
      - MAX_TOTAL_MEMORY=209715200
      - WEBSOCKET_ENABLED=true
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Optional: Monitoring with Prometheus (for advanced setups)
  prometheus:
    image: prom/prometheus:latest
    container_name: reels-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    profiles:
      - monitoring

  # Optional: Grafana for dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: reels-grafana
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
    depends_on:
      - prometheus
    profiles:
      - monitoring

volumes:
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
